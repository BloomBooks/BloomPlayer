//TODO this shouldn't be here
div.bloom-page{
    border-bottom: 0 !important;
    display: none !important; //we don't show unless we're selected

    transition: opacity 2s; // should match (or at least relate to) transitionMilliseconds in fadePageChanger.ts
}

span.ui-audioCurrent {
    background-color: yellow
}

//we might someday want to highlight the title as it is read, but at the moment,
//when we only have this black background, it's just too visually jarring.
.coverColor span.ui-audioCurrent {
    background-color: transparent;
}


html,body{
    height:100%;
    width:100%;
}

#root{
    width: 100vw;
    height: 100vh;
    box-sizing: border-box;
    //border: solid 1px orange;
}

#scaler{
    transform-origin: left top;
     //border: solid 1px red;
}

#pageViewer{
     display: flex;
     flex-direction: row;
     //when we do the transform: scale(n), which is done via code, we want
     //to still stick to the upper left corner
     transform-origin: left top 0px;
}


body{
     overflow: hidden;
}
.bloom-page.currentPage{
    display: block !important;
}
.bloom-page::after{
    content:'';
}

.numberedPage:after{
  content: '' !important;
}

// TODO move this stuff to Bloom's basePage.less (probably)

.Device16x9Landscape {

   	//TODO this might be for video only?
    background-color: black;

    .bookTitle, .coverBottomLangName  {
        transition: all 3s;// easeOutBack;
        opacity: .1;
    }

    &.showDisplayEffect {
        .bookTitle, .coverBottomLangName {
            opacity: 1;
        }
    }

    //TODO this is being moved to Bloom's stylesheets.
    //Leaving here temporarily while that propagates.
    .marginBox {
        background-color: black;

        .split-pane.horizontal-percent > .split-pane-component.position-top{
            margin-bottom: 0;
        }

        .bloom-imageContainer{
            //the basePage.css has a "- 3px" that leaves the bottom of the screen unused
            height: calc(100%) !important;
        }
    }
}

// This is a really ugly hack.
// A typical book (currently...and even if we fix it, old books may have this)
// has a style rule in bloomFeatures.less which says that when the feature combinations
// for fullscreenpicture are met, a bloom-imageContainer should be position:fixed, width:100%
// at the top left. It says nothing about height. But we need to increase its height, too.
// Then there is a rule in device.less which says that an image container should have
// height: calc(100%) !important; if it is in a marginbox inside Device16x9Landscape,
// Device16x9Portrait, or PictureStoryLandscape. I think those outer conditions are always
// true in a device layout, so basically on a device the height of an image container is always 100%.
// The calc() seems to be historical.
// All the doc I can find says that in a position:fixed element, percent heights are relative
// to the viewport; so this rule ought to make the image container fill the window.
// It doesn't, at least in Chrome or FireFox; instead, it seems to produce 100% of the page height,
// usually OK on a device, but seldom in a desktop window.
// Until someone comes up with a better idea, this rule sets a height of 100vw, which really does make
// the bloom-imageContainer fill the height of the window, and reluctantly uses !important to beat
// the 100% rule.
// The conditions of this rule duplicate the mess that the features.less creates for the width: 100% rule.
body[data-bffullscreenpicture*="allMedia"][data-bffullscreenpicture*="allOrientations"] .bloom-imageContainer,
body[data-bffullscreenpicture*="print"][data-media*="print"][data-bffullscreenpicture*="allOrientations"] .bloom-imageContainer,
body[data-bffullscreenpicture*="bloomReader"][data-media*="bloomReader"][data-bffullscreenpicture*="allOrientations"] .bloom-imageContainer,
body[data-bffullscreenpicture*="epub"][data-media*="epub"][data-bffullscreenpicture*="allOrientations"] .bloom-imageContainer,
body[data-bffullscreenpicture*="video"][data-media*="video"][data-bffullscreenpicture*="allOrientations"] .bloom-imageContainer,
body[data-bffullscreenpicture*="allMedia"][data-bffullscreenpicture*="landscape"] .bloom-page[class*="Landscape"] .bloom-imageContainer,
body[data-bffullscreenpicture*="print"][data-media*="print"][data-bffullscreenpicture*="landscape"] .bloom-page[class*="Landscape"] .bloom-imageContainer,
body[data-bffullscreenpicture*="bloomReader"][data-media*="bloomReader"][data-bffullscreenpicture*="landscape"] .bloom-page[class*="Landscape"] .bloom-imageContainer,
body[data-bffullscreenpicture*="epub"][data-media*="epub"][data-bffullscreenpicture*="landscape"] .bloom-page[class*="Landscape"] .bloom-imageContainer,
body[data-bffullscreenpicture*="video"][data-media*="video"][data-bffullscreenpicture*="landscape"] .bloom-page[class*="Landscape"] .bloom-imageContainer,
body[data-bffullscreenpicture*="allMedia"][data-bffullscreenpicture*="portrait"] .bloom-page[class*="Portrait"] .bloom-imageContainer,
body[data-bffullscreenpicture*="print"][data-media*="print"][data-bffullscreenpicture*="portrait"] .bloom-page[class*="Portrait"] .bloom-imageContainer,
body[data-bffullscreenpicture*="bloomReader"][data-media*="bloomReader"][data-bffullscreenpicture*="portrait"] .bloom-page[class*="Portrait"] .bloom-imageContainer,
body[data-bffullscreenpicture*="epub"][data-media*="epub"][data-bffullscreenpicture*="portrait"] .bloom-page[class*="Portrait"] .bloom-imageContainer,
body[data-bffullscreenpicture*="video"][data-media*="video"][data-bffullscreenpicture*="portrait"] .bloom-page[class*="Portrait"] .bloom-imageContainer
body[data-bffullscreenpicture][data-media*='bloomReader'] .bloom-imageContainer
    {height: 100vh !important;}